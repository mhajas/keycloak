name: Keycloak CI

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Cache Maven packages
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
          key: cache-1-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-1-${{ runner.os }}-m2

      - name: Build Keycloak
        run: |
           mvn clean install -nsu -B -e -DskipTests -Pquarkus,distribution
           mvn clean install -nsu -B -e -f testsuite/integration-arquillian/servers/auth-server -Pquarkus,auth-server-quarkus

      - name: Store Keycloak artifacts
        id: store-keycloak
        uses: actions/upload-artifact@v2
        with:
          name: keycloak-artifacts.zip
          retention-days: 2
          path: |
            ~/.m2/repository/org/keycloak
            !~/.m2/repository/org/keycloak/**/*.tar.gz

      - name: Remove keycloak artifacts before caching
        if: steps.cache.outputs.cache-hit != 'true'
        run: rm -rf ~/.m2/repository/org/keycloak

# Tests: Regular distribution

  test:
    name: Base testsuite
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        server: ['quarkus']
        tests: ['group1']
        it: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']
      fail-fast: false
    steps:
      - uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: cache-1-${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: cache-1-${{ runner.os }}-m2

      - name: Download built keycloak
        id: download-keycloak
        uses: actions/download-artifact@v2
        with:
          path: ~/.m2/repository/org/keycloak/
          name: keycloak-artifacts.zip

      # - name: List M2 repo
      #   run: |
      #     find ~ -name *dist*.zip
      #     ls -lR ~/.m2/repository

      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Run base tests
        run: |
          declare -A PARAMS TESTGROUP
          PARAMS["quarkus"]="-Pauth-server-quarkus"
          TESTGROUP["group1"]="-Dtest=ArtifactBindingWithResolutionServiceTest"   # Tests alphabetically before admin tests and those after "r"

          I=1
          while [[ $I -lt 6 ]] && mvn clean install -nsu -B ${PARAMS["${{ matrix.server }}"]} ${TESTGROUP["${{ matrix.tests }}"]} -f testsuite/integration-arquillian/tests/base/pom.xml > /tmp/test.out.$I; do
          bzip2 /tmp/test.out.$I
          echo -=-=-=-=- $I -=-=-=-=-
          cp testsuite/integration-arquillian/tests/base/target/containers/auth-server-quarkus/bin/output.log /tmp/test.out.quarkus.$I.log
          I=$[$I+1]

          done
          TEST_RESULT=${PIPESTATUS[0]}

          cp testsuite/integration-arquillian/tests/base/target/containers/auth-server-quarkus/bin/output.log /tmp/test.out.quarkus.$I.log

          find . -path '*/target/surefire-reports/*.xml' | zip -q reports-${{ matrix.server }}-base-tests-${{ matrix.tests }}.zip -@
          exit $TEST_RESULT

      - name: Base test reports
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: test-${{ matrix.it }}.out
          retention-days: 2
          path: /tmp/test.out*
          if-no-files-found: ignore

      - name: Base test reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: reports-${{ matrix.server }}-base-tests-${{ matrix.tests }}
          retention-days: 14
          path: reports-${{ matrix.server }}-base-tests-${{ matrix.tests }}.zip
          if-no-files-found: ignore
